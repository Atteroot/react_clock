{"version":3,"sources":["components/Clock.jsx","App.js","index.js"],"names":["Clock","state","date","Date","this","timerId","setInterval","setState","console","log","toLocaleTimeString","clearInterval","className","React","Component","App","clockName","isClockVisible","toggleVisibility","clockNameRandomizer","newClockName","parseInt","Math","random","name","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,kEAKuB,IAAD,OAClBC,KAAKC,QAAUC,aAAY,WACzB,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAE1BK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAC3B,OAVP,6CAcIC,cAAcP,KAAKC,WAdvB,+BAkBI,OACE,yBAAKO,UAAU,OACb,2CAEG,IACAR,KAAKH,MAAMC,KAAKQ,2BAvB3B,GAA2BG,IAAMC,WCuDlBC,G,MArDf,4MACEd,MAAQ,CACNe,UAAW,EACXC,gBAAgB,GAHpB,EAMEC,iBAAmB,WACjB,EAAKX,UACH,SAAAN,GAAK,MAAK,CAAEgB,gBAAiBhB,EAAMgB,oBARzC,EAYEE,oBAAsB,WACpB,IAAMC,EAAeC,SAAyB,IAAhBC,KAAKC,SAAgB,IAEnD,EAAKhB,SAAS,CAAES,UAAWI,IAE3BZ,QAAQC,IAAR,6CACI,EAAKR,MAAMe,UADf,eAC+BI,KAlBnC,uDAqBY,IAAD,EAC+BhB,KAAKH,MAAnCgB,EADD,EACCA,eAAgBD,EADjB,EACiBA,UAExB,OACE,yBAAKJ,UAAU,OACb,iDAEGI,GAGFC,GAAkB,kBAAC,EAAD,CAAOO,KAAMR,IAEhC,4BACES,KAAK,SACLb,UAAU,aACVc,QAAStB,KAAKc,kBAEbD,EAAiB,aAAe,cAGnC,4BACEL,UAAU,4BACVa,KAAK,SACLC,QAAStB,KAAKe,qBAHhB,wBAzCR,GAAyBN,IAAMC,YCD/Ba,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.8d8fc0e1.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class Clock extends React.Component {\r\n  state = {\r\n    date: new Date(),\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.timerId = setInterval(() => {\r\n      this.setState({ date: new Date()})\r\n      // eslint-disable-next-line\r\n      console.log(this.state.date.toLocaleTimeString());\r\n    }, 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <p>\r\n          Current time:\r\n          {' '}\r\n          {this.state.date.toLocaleTimeString()}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nClock.propTypes = {\r\n  name: PropTypes.number.isRequired,\r\n};\r\n","import React from 'react';\nimport { Clock } from './components/Clock';\n\nimport './App.scss';\n\nexport class App extends React.Component {\n  state = {\n    clockName: 1,\n    isClockVisible: false,\n  }\n\n  toggleVisibility = () => {\n    this.setState(\n      state => ({ isClockVisible: !state.isClockVisible }),\n    );\n  }\n\n  clockNameRandomizer = () => {\n    const newClockName = parseInt(Math.random() * 228, 10);\n\n    this.setState({ clockName: newClockName });\n    // eslint-disable-next-line\n    console.log(`The Clock was renamed from \n      ${this.state.clockName} to ${newClockName}`);\n  }\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          React clock â„–\n          {clockName}\n        </h1>\n\n        {isClockVisible && <Clock name={clockName} />}\n\n        <button\n          type=\"button\"\n          className=\"show-clock\"\n          onClick={this.toggleVisibility}\n        >\n          {isClockVisible ? 'Hide clock' : 'Show clock'}\n        </button>\n\n        <button\n          className=\"set-random-name-for-clock\"\n          type=\"button\"\n          onClick={this.clockNameRandomizer}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}